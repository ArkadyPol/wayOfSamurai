{"version":3,"sources":["components/Navbar/Navbar.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Header/Header.module.scss","components/Profile/MyPosts/Post/Post.module.scss","redux/profile-reducer.ts","redux/dialogs-reducer.ts","redux/index.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","App.tsx","index.tsx","components/Dialogs/Dialogs.module.scss"],"names":["module","exports","initialState","posts","id","v1","message","likesCount","newPostText","profileReducer","state","action","type","newPost","newText","dialogs","name","messages","newMessageText","dialogsReducer","newMessage","rootReducer","combineReducers","profilePage","dialogsPage","store","createStore","devToolsEnhancer","Header","className","s","header","src","alt","NavItem","text","toUpperCase","slice","item","to","activeClassName","active","Navbar","linksElements","map","l","i","nav","Post","props","MyPosts","postsElements","p","postsBlock","value","onChange","e","currentTarget","dispatch","onClick","ProfileInfo","backImage","descriptionBlock","Profile","DialogItem","path","dialog","Message","Dialogs","dialogsElements","d","messagesElements","m","dialogsItems","placeholder","News","Music","Settings","App","getState","render","rerenderEntireTree","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.a5be941d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3ilfA\",\"item\":\"Navbar_item__1b_X3\",\"active\":\"Navbar_active__2aGl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1VYe5\",\"posts\":\"MyPosts_posts__JjByF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backImage\":\"ProfileInfo_backImage__3GkEv\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3_uCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__co2Jb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3vv9E\"};","import { v1 } from 'uuid'\r\n\r\nexport type PostType = {\r\n  id: string\r\n  message: string\r\n  likesCount: number\r\n}\r\nexport type ProfilePageType = {\r\n  posts: Array<PostType>\r\n  newPostText: string\r\n}\r\n\r\nexport const addPostAC = () => ({ type: 'ADD_POST' } as const)\r\nexport const updateNewPostTextAC = (newText: string) => ({\r\n  type: 'UPDATE_NEW_POST_TEXT',\r\n  newText\r\n} as const)\r\nexport type ProfileReducerActionType = ReturnType<typeof addPostAC> | ReturnType<typeof updateNewPostTextAC>\r\n\r\nconst initialState: ProfilePageType = {\r\n  posts: [\r\n    { id: v1(), message: 'It\\'s my third post', likesCount: 1 },\r\n    { id: v1(), message: 'It\\'s my second post', likesCount: 2 },\r\n    { id: v1(), message: 'It\\'s my first post', likesCount: 3 }\r\n  ],\r\n  newPostText: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action: ProfileReducerActionType): ProfilePageType => {\r\n  switch (action.type) {\r\n    case 'ADD_POST':\r\n      const newPost: PostType = {\r\n        id: v1(),\r\n        message: state.newPostText,\r\n        likesCount: 0\r\n      }\r\n      return { ...state, posts: [...state.posts, newPost], newPostText: '' }\r\n    case 'UPDATE_NEW_POST_TEXT':\r\n      return { ...state, newPostText: action.newText }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default profileReducer","import { v1 } from 'uuid'\r\n\r\nexport type DialogType = {\r\n  id: string\r\n  name: string\r\n}\r\nexport type MessageType = {\r\n  id: string\r\n  message: string\r\n}\r\nexport type DialogsPageType = {\r\n  dialogs: Array<DialogType>\r\n  messages: Array<MessageType>\r\n  newMessageText: string\r\n}\r\n\r\nexport const sendMessageAC = () => ({ type: 'SEND_MESSAGE' } as const)\r\nexport const updateNewMessageTextAC = (newText: string) => ({\r\n  type: 'UPDATE_NEW_MESSAGE_TEXT',\r\n  newText\r\n} as const)\r\nexport type DialogsReducerActionType = ReturnType<typeof sendMessageAC> | ReturnType<typeof updateNewMessageTextAC>\r\n\r\nconst initialState: DialogsPageType = {\r\n  dialogs: [\r\n    { id: v1(), name: 'Dimych' },\r\n    { id: v1(), name: 'Andrey' },\r\n    { id: v1(), name: 'Sveta' },\r\n    { id: v1(), name: 'Sasha' },\r\n    { id: v1(), name: 'Viktor' },\r\n    { id: v1(), name: 'Valera' }\r\n  ],\r\n  messages: [\r\n    { id: v1(), message: 'Hi' },\r\n    { id: v1(), message: 'How are you?' },\r\n    { id: v1(), message: 'What are you doing?' }\r\n  ],\r\n  newMessageText: ''\r\n}\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action: DialogsReducerActionType): DialogsPageType => {\r\n  switch (action.type) {\r\n    case 'SEND_MESSAGE':\r\n      const newMessage: MessageType = {\r\n        id: v1(),\r\n        message: state.newMessageText\r\n      }\r\n      return { ...state, messages: [...state.messages, newMessage], newMessageText: '' }\r\n    case 'UPDATE_NEW_MESSAGE_TEXT':\r\n      return { ...state, newMessageText: action.newText }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default dialogsReducer","import { combineReducers, createStore, Store } from 'redux'\r\nimport { devToolsEnhancer } from 'redux-devtools-extension'\r\nimport profileReducer, { ProfileReducerActionType } from './profile-reducer'\r\nimport dialogsReducer, { DialogsReducerActionType } from './dialogs-reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type ActionType = ProfileReducerActionType | DialogsReducerActionType\r\n\r\nconst store: Store<RootStateType, ActionType> = createStore(rootReducer, devToolsEnhancer({}))\r\n\r\nexport type StoreType = typeof store\r\n\r\nexport default store","import s from './Header.module.scss'\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className={s.header}>\r\n      <img\r\n        src=\"https://image.shutterstock.com/image-vector/dots-letter-c-logo-design-260nw-551769190.jpg\"\r\n        alt=\"logo\"\r\n      />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { NavLink } from 'react-router-dom'\r\nimport s from './Navbar.module.scss'\r\n\r\nfunction Navbar() {\r\n  const links = ['profile', 'dialogs', 'news', 'music', 'settings']\r\n  const linksElements = links.map((l, i) => <NavItem key={i} name={l} />)\r\n\r\n  return <nav className={s.nav}>{linksElements}</nav>\r\n}\r\n\r\ntype NavItemPropsType = {\r\n  name: string\r\n}\r\n\r\nfunction NavItem({ name }: NavItemPropsType) {\r\n  const text = name[0].toUpperCase() + name.slice(1)\r\n  return (\r\n    <div className={s.item}>\r\n      <NavLink to={`/${name}`} activeClassName={s.active}>\r\n        {text}\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import s from './Post.module.scss'\r\n\r\ntype PostType = {\r\n  message: string\r\n  likesCount: number\r\n}\r\n\r\nfunction Post(props: PostType) {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRDzaMc-3F_Ey437EAdp97a4dPrHCI9HI33nA&usqp=CAU\"\r\n        alt=\"avatar\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span>like </span>\r\n        <span>{props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import { ChangeEvent } from 'react'\r\nimport s from './MyPosts.module.scss'\r\nimport Post from './Post/Post'\r\nimport { ActionType } from '../../../redux'\r\nimport { addPostAC, updateNewPostTextAC, PostType } from '../../../redux/profile-reducer'\r\nimport { Dispatch } from 'redux'\r\n\r\ntype PropsType = {\r\n  posts: Array<PostType>\r\n  newPostText: string\r\n  dispatch: Dispatch<ActionType>\r\n}\r\n\r\nfunction MyPosts(props: PropsType) {\r\n  const postsElements = props.posts.map(p => (\r\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} />\r\n  ))\r\n  const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    const text = e.currentTarget.value\r\n    props.dispatch(updateNewPostTextAC(text))\r\n  }\r\n\r\n  const addPost = () => {\r\n    props.dispatch(addPostAC())\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <div>\r\n        <div>\r\n          <textarea value={props.newPostText} onChange={onPostChange} />\r\n        </div>\r\n        <div>\r\n          <button onClick={addPost}>Add Post</button>\r\n        </div>\r\n      </div>\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyPosts\r\n","import s from './ProfileInfo.module.scss'\r\n\r\nfunction ProfileInfo() {\r\n  return (\r\n    <>\r\n      <div className={s.backImage}>\r\n        <img\r\n          src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ-fff2lftqIE077pFAKU1Mhbcj8YFvBbMvpA&usqp=CAU\"\r\n          alt=\"background\"\r\n        />\r\n      </div>\r\n      <div className={s.descriptionBlock}>avatar + description</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo\r\n","import MyPosts from './MyPosts/MyPosts'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport { ActionType } from '../../redux'\r\nimport { ProfilePageType } from '../../redux/profile-reducer'\r\nimport { Dispatch } from 'redux'\r\n\r\ntype PropsType = {\r\n  profilePage: ProfilePageType\r\n  dispatch: Dispatch<ActionType>\r\n}\r\n\r\nfunction Profile(props: PropsType) {\r\n  const { posts, newPostText } = props.profilePage\r\n  return (\r\n    <div>\r\n      <ProfileInfo />\r\n      <MyPosts posts={posts} newPostText={newPostText}\r\n               dispatch={props.dispatch} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import s from '../Dialogs.module.scss'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { DialogType } from '../../../redux/dialogs-reducer'\r\n\r\nfunction DialogItem(props: DialogType) {\r\n  let path = `/dialogs/${props.id}`\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={path} activeClassName={s.active}>\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem\r\n","import s from '../Dialogs.module.scss'\r\n\r\ntype MessagePropsType = {\r\n  message: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n  return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message\r\n","import { ChangeEvent } from 'react'\r\nimport s from './Dialogs.module.scss'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { ActionType } from '../../redux'\r\nimport { DialogsPageType, sendMessageAC, updateNewMessageTextAC } from '../../redux/dialogs-reducer'\r\nimport { Dispatch } from 'redux'\r\n\r\n\r\ntype DialogsPropsType = {\r\n  state: DialogsPageType\r\n  dispatch: Dispatch<ActionType>\r\n}\r\n\r\nfunction Dialogs(props: DialogsPropsType) {\r\n  const { dialogs, messages, newMessageText } = props.state\r\n\r\n  const dialogsElements = dialogs.map(d => (\r\n    <DialogItem key={d.id} name={d.name} id={d.id} />\r\n  ))\r\n  const messagesElements = messages.map(m => (\r\n    <Message key={m.id} message={m.message} />\r\n  ))\r\n\r\n  const sendMessage = () => {\r\n    props.dispatch(sendMessageAC())\r\n  }\r\n  const onMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    const message = e.currentTarget.value\r\n    props.dispatch(updateNewMessageTextAC(message))\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <div className={s.newMessage}>\r\n          <textarea value={newMessageText} onChange={onMessageChange} placeholder='Enter your message' />\r\n        </div>\r\n        <div>\r\n          <button onClick={sendMessage}>Send Message</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs\r\n","//import s from './News.module.scss';\r\n\r\nfunction News() {\r\n  return <div>News</div>\r\n}\r\n\r\nexport default News\r\n","//import s from './Music.module.scss';\r\n\r\nfunction Music() {\r\n  return <div>Music</div>\r\n}\r\n\r\nexport default Music\r\n","//import s from './Settings.module.scss';\r\n\r\nfunction Settings() {\r\n  return <div>Settings</div>\r\n}\r\n\r\nexport default Settings\r\n","import { Route } from 'react-router-dom'\r\nimport './App.scss'\r\nimport Header from './components/Header/Header'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport Profile from './components/Profile/Profile'\r\nimport Dialogs from './components/Dialogs/Dialogs'\r\nimport News from './components/News/News'\r\nimport Music from './components/Music/Music'\r\nimport Settings from './components/Settings/Settings'\r\nimport { StoreType } from './redux'\r\n\r\ntype AppPropsType = {\r\n  store: StoreType\r\n}\r\n\r\nfunction App({ store }: AppPropsType) {\r\n  const state = store.getState()\r\n  const dispatch = store.dispatch\r\n\r\n  return (\r\n    <div className='app-wrapper'>\r\n      <Header />\r\n      <Navbar />\r\n      <div className='app-wrapper-content'>\r\n        <Route\r\n          path='/dialogs'\r\n          render={() => <Dialogs state={state.dialogsPage} dispatch={dispatch} />}\r\n        />\r\n        <Route\r\n          path='/profile'\r\n          render={() => <Profile profilePage={state.profilePage} dispatch={dispatch} />}\r\n        />\r\n        <Route path='/news' render={News} />\r\n        <Route path='/music' render={Music} />\r\n        <Route path='/settings' render={Settings} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import store from './redux'\r\nimport './index.scss'\r\nimport ReactDOM from 'react-dom'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport App from './App'\r\n\r\nconst rerenderEntireTree = () => {\r\n  ReactDOM.render(\r\n    <HashRouter>\r\n      <App store={store} />\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n  )\r\n}\r\n\r\nrerenderEntireTree()\r\n\r\nstore.subscribe(rerenderEntireTree)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Amyw\",\"dialogsItems\":\"Dialogs_dialogsItems__flAbO\",\"dialog\":\"Dialogs_dialog__3UqrR\",\"active\":\"Dialogs_active__3t-ta\",\"messages\":\"Dialogs_messages__3vFfU\",\"message\":\"Dialogs_message__2rGeh\",\"newMessage\":\"Dialogs_newMessage__1cZti\"};"],"sourceRoot":""}