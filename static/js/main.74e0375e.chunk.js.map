{"version":3,"sources":["components/Navbar/Navbar.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Header/Header.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/state.ts","components/Profile/Profile.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","App.tsx","render.tsx","index.tsx","components/Dialogs/Dialogs.module.scss"],"names":["module","exports","Header","className","s","header","src","alt","NavItem","name","text","toUpperCase","slice","item","to","activeClassName","active","Navbar","linksElements","map","l","i","nav","Post","props","message","likesCount","MyPosts","postsElements","posts","p","id","newPostElement","useRef","postsBlock","ref","onClick","current","value","addPost","ProfileInfo","backImage","descriptionBlock","state","profilePage","v1","dialogsPage","dialogs","messages","postMessage","newPost","push","rerenderEntireTree","Profile","DialogItem","path","dialog","Message","Dialogs","dialogsElements","d","messagesElements","m","dialogsItems","News","Music","Settings","App","render","ReactDOM","basename","process","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,yB,mBCAjFD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,mBCAnED,EAAOC,QAAU,CAAC,UAAY,+BAA+B,iBAAmB,wC,mBCAhFD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,KAAO,qB,qJCYVC,MAXf,WACE,OACE,wBAAQC,UAAWC,IAAEC,OAArB,SACE,qBACEC,IAAI,4FACJC,IAAI,Y,wBCOZ,SAASC,EAAT,GAA8C,IAA3BC,EAA0B,EAA1BA,KACXC,EAAOD,EAAK,GAAGE,cAAgBF,EAAKG,MAAM,GAChD,OACE,qBAAKT,UAAWC,IAAES,KAAlB,SACE,cAAC,IAAD,CAASC,GAAE,WAAML,GAAQM,gBAAiBX,IAAEY,OAA5C,SACGN,MAMMO,MAtBf,WACE,IACMC,EADQ,CAAC,UAAW,UAAW,OAAQ,QAAS,YAC1BC,KAAI,SAACC,EAAGC,GAAJ,OAAU,cAACb,EAAD,CAAiBC,KAAMW,GAATC,MAExD,OAAO,qBAAKlB,UAAWC,IAAEkB,IAAlB,SAAwBJ,K,yCCgBlBK,MAhBf,SAAcC,GACZ,OACE,sBAAKrB,UAAWC,IAAES,KAAlB,UACE,qBACEP,IAAI,sGACJC,IAAI,WAELiB,EAAMC,QACP,gCACE,yCACA,+BAAOD,EAAME,oBCwBNC,MA/Bf,SAAiBH,GACf,IAAMI,EAAgBJ,EAAMK,MAAMV,KAAI,SAAAW,GAAC,OACrC,cAAC,EAAD,CAAiBL,QAASK,EAAEL,QAASC,WAAYI,EAAEJ,YAAxCI,EAAEC,OAGTC,EAAiBC,iBAA4B,MAUnD,OACE,sBAAK9B,UAAWC,IAAE8B,WAAlB,UACE,0CACA,gCACE,8BACE,0BAAUC,IAAKH,MAEjB,8BACE,wBAAQI,QAhBA,WACd,GAAIJ,EAAeK,QAAS,CAC1B,IAAM3B,EAAOsB,EAAeK,QAAQC,MACpCd,EAAMe,QAAQ7B,GACdsB,EAAeK,QAAQC,MAAQ,KAY3B,2BAGJ,qBAAKnC,UAAWC,IAAEyB,MAAlB,SAA0BD,Q,iBCpBjBY,MAdf,WACE,OACE,qCACE,qBAAKrC,UAAWC,IAAEqC,UAAlB,SACE,qBACEnC,IAAI,sGACJC,IAAI,iBAGR,qBAAKJ,UAAWC,IAAEsC,iBAAlB,sC,QCiBAC,EAAuB,CAC3BC,YAAa,CACXf,MAAO,CACL,CAAEE,GAAIc,cAAMpB,QAAS,qBAAuBC,WAAY,GACxD,CAAEK,GAAIc,cAAMpB,QAAS,sBAAwBC,WAAY,GACzD,CAAEK,GAAIc,cAAMpB,QAAS,qBAAuBC,WAAY,KAG5DoB,YAAa,CACXC,QAAS,CACP,CAAEhB,GAAIc,cAAMpC,KAAM,UAClB,CAAEsB,GAAIc,cAAMpC,KAAM,UAClB,CAAEsB,GAAIc,cAAMpC,KAAM,SAClB,CAAEsB,GAAIc,cAAMpC,KAAM,SAClB,CAAEsB,GAAIc,cAAMpC,KAAM,UAClB,CAAEsB,GAAIc,cAAMpC,KAAM,WAEpBuC,SAAU,CACR,CAAEjB,GAAIc,cAAMpB,QAAS,MACrB,CAAEM,GAAIc,cAAMpB,QAAS,gBACrB,CAAEM,GAAIc,cAAMpB,QAAS,0BAKdc,EAAU,SAAVA,EAAWU,GACtB,IAAMC,EAAoB,CACxBnB,GAAIc,cACJpB,QAASwB,EACTvB,WAAY,GAGdiB,EAAMC,YAAYf,MAAMsB,KAAKD,GAC7BE,EAAmBT,EAAOJ,IAIbI,IC/CAU,MATf,SAAiB7B,GACf,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAASK,MAAOL,EAAMmB,MAAMd,MAAOU,QAASA,Q,gBCEnCe,MAXf,SAAoB9B,GAClB,IAAI+B,EAAI,mBAAe/B,EAAMO,IAC7B,OACE,qBAAK5B,UAAWC,IAAEoD,OAAlB,SACE,cAAC,IAAD,CAAS1C,GAAIyC,EAAMxC,gBAAiBX,IAAEY,OAAtC,SACGQ,EAAMf,UCCAgD,MAJf,SAAiBjC,GACf,OAAO,qBAAKrB,UAAWC,IAAEqB,QAAlB,SAA4BD,EAAMC,WCmB5BiC,MAjBf,SAAiBlC,GAA0B,IAAD,EACVA,EAAMmB,MAA5BI,EADgC,EAChCA,QAASC,EADuB,EACvBA,SACXW,EAAkBZ,EAAQ5B,KAAI,SAAAyC,GAAC,OACnC,cAAC,EAAD,CAAuBnD,KAAMmD,EAAEnD,KAAMsB,GAAI6B,EAAE7B,IAA1B6B,EAAE7B,OAEf8B,EAAmBb,EAAS7B,KAAI,SAAA2C,GAAC,OACrC,cAAC,EAAD,CAAoBrC,QAASqC,EAAErC,SAAjBqC,EAAE/B,OAGlB,OACE,sBAAK5B,UAAWC,IAAE2C,QAAlB,UACE,qBAAK5C,UAAWC,IAAE2D,aAAlB,SAAiCJ,IACjC,qBAAKxD,UAAWC,IAAE4C,SAAlB,SAA6Ba,QCfpBG,MAJf,WACE,OAAO,wCCGMC,MAJf,WACE,OAAO,yCCGMC,MAJf,WACE,OAAO,4CCmCMC,MAtBf,SAAa3C,GACX,OACE,sBAAKrB,UAAU,cAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,sBAAf,UACE,cAAC,IAAD,CACEoD,KAAK,WACLa,OAAQ,kBAAM,cAAC,EAAD,CAASzB,MAAOnB,EAAMmB,MAAMG,iBAE5C,cAAC,IAAD,CACES,KAAK,WACLa,OAAQ,kBAAM,cAAC,EAAD,CAASzB,MAAOnB,EAAMmB,MAAMC,YAAaL,QAASf,EAAMe,aAExE,cAAC,IAAD,CAAOgB,KAAK,QAAQa,OAAQJ,IAC5B,cAAC,IAAD,CAAOT,KAAK,SAASa,OAAQH,IAC7B,cAAC,IAAD,CAAOV,KAAK,YAAYa,OAAQF,WC1B3Bd,EAAqB,SAACT,EAAsBJ,GACvD8B,IAASD,OACP,cAAC,IAAD,CAAeE,SAAUC,gBAAzB,SACE,cAAC,EAAD,CAAK5B,MAAOA,EAAOJ,QAASA,MAE9BiC,SAASC,eAAe,UCR5BrB,EAAmBT,EAAOJ,I,kBCF1BvC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,4B","file":"static/js/main.74e0375e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3ilfA\",\"item\":\"Navbar_item__1b_X3\",\"active\":\"Navbar_active__2aGl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1VYe5\",\"posts\":\"MyPosts_posts__JjByF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backImage\":\"ProfileInfo_backImage__3GkEv\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3_uCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__co2Jb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3vv9E\"};","import s from './Header.module.scss'\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className={s.header}>\r\n      <img\r\n        src=\"https://image.shutterstock.com/image-vector/dots-letter-c-logo-design-260nw-551769190.jpg\"\r\n        alt=\"logo\"\r\n      />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { NavLink } from 'react-router-dom'\r\nimport s from './Navbar.module.scss'\r\n\r\nfunction Navbar() {\r\n  const links = ['profile', 'dialogs', 'news', 'music', 'settings']\r\n  const linksElements = links.map((l, i) => <NavItem key={i} name={l} />)\r\n\r\n  return <nav className={s.nav}>{linksElements}</nav>\r\n}\r\n\r\ntype NavItemPropsType = {\r\n  name: string\r\n}\r\n\r\nfunction NavItem({ name }: NavItemPropsType) {\r\n  const text = name[0].toUpperCase() + name.slice(1)\r\n  return (\r\n    <div className={s.item}>\r\n      <NavLink to={`/${name}`} activeClassName={s.active}>\r\n        {text}\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import s from './Post.module.scss'\r\n\r\ntype PostType = {\r\n  message: string\r\n  likesCount: number\r\n}\r\n\r\nfunction Post(props: PostType) {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRDzaMc-3F_Ey437EAdp97a4dPrHCI9HI33nA&usqp=CAU\"\r\n        alt=\"avatar\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span>like </span>\r\n        <span>{props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import { useRef } from 'react'\r\nimport s from './MyPosts.module.scss'\r\nimport Post from './Post/Post'\r\nimport { PostType } from '../../../redux/state'\r\n\r\ntype PropsType = {\r\n  posts: Array<PostType>\r\n  addPost: (postMessage: string) => void\r\n}\r\n\r\nfunction MyPosts(props: PropsType) {\r\n  const postsElements = props.posts.map(p => (\r\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} />\r\n  ))\r\n\r\n  const newPostElement = useRef<HTMLTextAreaElement>(null)\r\n\r\n  const addPost = () => {\r\n    if (newPostElement.current) {\r\n      const text = newPostElement.current.value\r\n      props.addPost(text)\r\n      newPostElement.current.value = ''\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <div>\r\n        <div>\r\n          <textarea ref={newPostElement} />\r\n        </div>\r\n        <div>\r\n          <button onClick={addPost}>Add Post</button>\r\n        </div>\r\n      </div>\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyPosts\r\n","import s from './ProfileInfo.module.scss'\r\n\r\nfunction ProfileInfo() {\r\n  return (\r\n    <>\r\n      <div className={s.backImage}>\r\n        <img\r\n          src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ-fff2lftqIE077pFAKU1Mhbcj8YFvBbMvpA&usqp=CAU\"\r\n          alt=\"background\"\r\n        />\r\n      </div>\r\n      <div className={s.descriptionBlock}>avatar + description</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo\r\n","import { v1 } from 'uuid'\r\nimport { rerenderEntireTree } from '../render'\r\n\r\nexport type PostType = {\r\n  id: string\r\n  message: string\r\n  likesCount: number\r\n}\r\nexport type DialogType = {\r\n  id: string\r\n  name: string\r\n}\r\nexport type MessageType = {\r\n  id: string\r\n  message: string\r\n}\r\nexport type ProfilePageType = {\r\n  posts: Array<PostType>\r\n}\r\nexport type DialogsPageType = {\r\n  dialogs: Array<DialogType>\r\n  messages: Array<MessageType>\r\n}\r\nexport type RootStateType = {\r\n  profilePage: ProfilePageType\r\n  dialogsPage: DialogsPageType\r\n}\r\n\r\nconst state: RootStateType = {\r\n  profilePage: {\r\n    posts: [\r\n      { id: v1(), message: 'It\\'s my third post', likesCount: 1 },\r\n      { id: v1(), message: 'It\\'s my second post', likesCount: 2 },\r\n      { id: v1(), message: 'It\\'s my first post', likesCount: 3 }\r\n    ]\r\n  },\r\n  dialogsPage: {\r\n    dialogs: [\r\n      { id: v1(), name: 'Dimych' },\r\n      { id: v1(), name: 'Andrey' },\r\n      { id: v1(), name: 'Sveta' },\r\n      { id: v1(), name: 'Sasha' },\r\n      { id: v1(), name: 'Viktor' },\r\n      { id: v1(), name: 'Valera' }\r\n    ],\r\n    messages: [\r\n      { id: v1(), message: 'Hi' },\r\n      { id: v1(), message: 'How are you?' },\r\n      { id: v1(), message: 'What are you doing?' }\r\n    ]\r\n  }\r\n}\r\n\r\nexport const addPost = (postMessage: string) => {\r\n  const newPost: PostType = {\r\n    id: v1(),\r\n    message: postMessage,\r\n    likesCount: 0\r\n  }\r\n\r\n  state.profilePage.posts.push(newPost)\r\n  rerenderEntireTree(state, addPost)\r\n\r\n}\r\n\r\nexport default state\r\n","import MyPosts from './MyPosts/MyPosts'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport { addPost, ProfilePageType } from '../../redux/state'\r\n\r\ntype PropsType = {\r\n  state: ProfilePageType\r\n  addPost: (postMessage: string) => void\r\n}\r\n\r\nfunction Profile(props: PropsType) {\r\n  return (\r\n    <div>\r\n      <ProfileInfo />\r\n      <MyPosts posts={props.state.posts} addPost={addPost} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import s from '../Dialogs.module.scss'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { DialogType } from '../../../redux/state'\r\n\r\nfunction DialogItem(props: DialogType) {\r\n  let path = `/dialogs/${props.id}`\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={path} activeClassName={s.active}>\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem\r\n","import s from '../Dialogs.module.scss'\r\n\r\ntype MessagePropsType = {\r\n  message: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n  return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message\r\n","import s from './Dialogs.module.scss'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { DialogsPageType } from '../../redux/state'\r\n\r\ntype DialogsPropsType = {\r\n  state: DialogsPageType\r\n}\r\n\r\nfunction Dialogs(props: DialogsPropsType) {\r\n  const { dialogs, messages } = props.state\r\n  const dialogsElements = dialogs.map(d => (\r\n    <DialogItem key={d.id} name={d.name} id={d.id} />\r\n  ))\r\n  const messagesElements = messages.map(m => (\r\n    <Message key={m.id} message={m.message} />\r\n  ))\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>{messagesElements}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs\r\n","//import s from './News.module.scss';\r\n\r\nfunction News() {\r\n  return <div>News</div>\r\n}\r\n\r\nexport default News\r\n","//import s from './Music.module.scss';\r\n\r\nfunction Music() {\r\n  return <div>Music</div>\r\n}\r\n\r\nexport default Music\r\n","//import s from './Settings.module.scss';\r\n\r\nfunction Settings() {\r\n  return <div>Settings</div>\r\n}\r\n\r\nexport default Settings\r\n","import { Route } from 'react-router-dom'\r\nimport './App.scss'\r\nimport Header from './components/Header/Header'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport Profile from './components/Profile/Profile'\r\nimport Dialogs from './components/Dialogs/Dialogs'\r\nimport News from './components/News/News'\r\nimport Music from './components/Music/Music'\r\nimport Settings from './components/Settings/Settings'\r\nimport { RootStateType } from './redux/state'\r\n\r\ntype AppPropsType = {\r\n  state: RootStateType\r\n  addPost: (postMessage: string) => void\r\n}\r\n\r\nfunction App(props: AppPropsType) {\r\n  return (\r\n    <div className='app-wrapper'>\r\n      <Header />\r\n      <Navbar />\r\n      <div className='app-wrapper-content'>\r\n        <Route\r\n          path='/dialogs'\r\n          render={() => <Dialogs state={props.state.dialogsPage} />}\r\n        />\r\n        <Route\r\n          path='/profile'\r\n          render={() => <Profile state={props.state.profilePage} addPost={props.addPost} />}\r\n        />\r\n        <Route path='/news' render={News} />\r\n        <Route path='/music' render={Music} />\r\n        <Route path='/settings' render={Settings} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport App from './App'\r\nimport { BrowserRouter} from 'react-router-dom'\r\nimport { RootStateType } from './redux/state'\r\n\r\nexport const rerenderEntireTree = (state: RootStateType, addPost: (postMessage: string) => void) => {\r\n  ReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App state={state} addPost={addPost} />\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n  )\r\n}\r\n\r\n","import { rerenderEntireTree } from './render'\r\nimport state, { addPost } from './redux/state'\r\n\r\nrerenderEntireTree(state, addPost)\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Amyw\",\"dialogsItems\":\"Dialogs_dialogsItems__flAbO\",\"dialog\":\"Dialogs_dialog__3UqrR\",\"active\":\"Dialogs_active__3t-ta\",\"messages\":\"Dialogs_messages__3vFfU\",\"message\":\"Dialogs_message__2rGeh\"};"],"sourceRoot":""}