{"version":3,"sources":["components/Navbar/Navbar.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Header/Header.module.scss","components/Profile/MyPosts/Post/Post.module.scss","redux/state.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","App.tsx","index.tsx","components/Dialogs/Dialogs.module.scss"],"names":["module","exports","store","_state","profilePage","posts","id","v1","message","likesCount","newPostText","dialogsPage","dialogs","name","messages","newMessageText","_callSubscriber","console","log","getState","this","subscribe","observer","dispatch","action","type","newPost","push","newText","newMessage","Header","className","s","header","src","alt","NavItem","text","toUpperCase","slice","item","to","activeClassName","active","Navbar","linksElements","map","l","i","nav","Post","props","MyPosts","postsElements","p","postsBlock","value","onChange","e","currentTarget","onClick","ProfileInfo","backImage","descriptionBlock","Profile","DialogItem","path","dialog","Message","Dialogs","state","dialogsElements","d","messagesElements","m","dialogsItems","News","Music","Settings","App","bind","render","rerenderEntireTree","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a859167a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3ilfA\",\"item\":\"Navbar_item__1b_X3\",\"active\":\"Navbar_active__2aGl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1VYe5\",\"posts\":\"MyPosts_posts__JjByF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backImage\":\"ProfileInfo_backImage__3GkEv\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3_uCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__co2Jb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3vv9E\"};","import { v1 } from 'uuid'\r\n\r\nexport type PostType = {\r\n  id: string\r\n  message: string\r\n  likesCount: number\r\n}\r\nexport type DialogType = {\r\n  id: string\r\n  name: string\r\n}\r\nexport type MessageType = {\r\n  id: string\r\n  message: string\r\n}\r\nexport type ProfilePageType = {\r\n  posts: Array<PostType>\r\n  newPostText: string\r\n}\r\nexport type DialogsPageType = {\r\n  dialogs: Array<DialogType>\r\n  messages: Array<MessageType>\r\n  newMessageText: string\r\n}\r\nexport type RootStateType = {\r\n  profilePage: ProfilePageType\r\n  dialogsPage: DialogsPageType\r\n}\r\n\r\nexport const addPostAC = () => ({ type: 'ADD_POST' } as const)\r\nexport const updateNewPostTextAC = (newText: string) => ({\r\n  type: 'UPDATE_NEW_POST_TEXT',\r\n  newText\r\n} as const)\r\nexport const sendMessageAC = () => ({ type: 'SEND_MESSAGE' } as const)\r\nexport const updateNewMessageTextAC = (newText: string) => ({\r\n  type: 'UPDATE_NEW_MESSAGE_TEXT',\r\n  newText\r\n} as const)\r\n\r\nexport type ActionType =\r\n  ReturnType<typeof addPostAC>\r\n  | ReturnType<typeof updateNewPostTextAC>\r\n  | ReturnType<typeof sendMessageAC>\r\n  | ReturnType<typeof updateNewMessageTextAC>\r\n\r\nexport type StoreType = {\r\n  _state: RootStateType\r\n  getState: () => RootStateType\r\n  _callSubscriber: () => void\r\n  subscribe: (observer: () => void) => void\r\n  dispatch: (action: ActionType) => void\r\n}\r\n\r\nconst store: StoreType = {\r\n  _state: {\r\n    profilePage: {\r\n      posts: [\r\n        { id: v1(), message: 'It\\'s my third post', likesCount: 1 },\r\n        { id: v1(), message: 'It\\'s my second post', likesCount: 2 },\r\n        { id: v1(), message: 'It\\'s my first post', likesCount: 3 }\r\n      ],\r\n      newPostText: ''\r\n    },\r\n    dialogsPage: {\r\n      dialogs: [\r\n        { id: v1(), name: 'Dimych' },\r\n        { id: v1(), name: 'Andrey' },\r\n        { id: v1(), name: 'Sveta' },\r\n        { id: v1(), name: 'Sasha' },\r\n        { id: v1(), name: 'Viktor' },\r\n        { id: v1(), name: 'Valera' }\r\n      ],\r\n      messages: [\r\n        { id: v1(), message: 'Hi' },\r\n        { id: v1(), message: 'How are you?' },\r\n        { id: v1(), message: 'What are you doing?' }\r\n      ],\r\n      newMessageText: ''\r\n    }\r\n  },\r\n  _callSubscriber() {\r\n    console.log('state changed')\r\n  },\r\n  getState() {\r\n    return this._state\r\n  },\r\n  subscribe(observer) {\r\n    this._callSubscriber = observer\r\n  },\r\n  dispatch(action) {\r\n    switch (action.type) {\r\n      case 'ADD_POST':\r\n        const newPost: PostType = {\r\n          id: v1(),\r\n          message: this._state.profilePage.newPostText,\r\n          likesCount: 0\r\n        }\r\n        this._state.profilePage.posts.push(newPost)\r\n        this._state.profilePage.newPostText = ''\r\n        this._callSubscriber()\r\n        break\r\n      case 'UPDATE_NEW_POST_TEXT':\r\n        this._state.profilePage.newPostText = action.newText\r\n        this._callSubscriber()\r\n        break\r\n      case 'SEND_MESSAGE':\r\n        const newMessage: MessageType = {\r\n          id: v1(),\r\n          message: this._state.dialogsPage.newMessageText\r\n        }\r\n        this._state.dialogsPage.messages.push(newMessage)\r\n        this._state.dialogsPage.newMessageText = ''\r\n        this._callSubscriber()\r\n        break\r\n      case 'UPDATE_NEW_MESSAGE_TEXT':\r\n        this._state.dialogsPage.newMessageText = action.newText\r\n        this._callSubscriber()\r\n    }\r\n  }\r\n}\r\n\r\nexport default store\r\n","import s from './Header.module.scss'\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className={s.header}>\r\n      <img\r\n        src=\"https://image.shutterstock.com/image-vector/dots-letter-c-logo-design-260nw-551769190.jpg\"\r\n        alt=\"logo\"\r\n      />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { NavLink } from 'react-router-dom'\r\nimport s from './Navbar.module.scss'\r\n\r\nfunction Navbar() {\r\n  const links = ['profile', 'dialogs', 'news', 'music', 'settings']\r\n  const linksElements = links.map((l, i) => <NavItem key={i} name={l} />)\r\n\r\n  return <nav className={s.nav}>{linksElements}</nav>\r\n}\r\n\r\ntype NavItemPropsType = {\r\n  name: string\r\n}\r\n\r\nfunction NavItem({ name }: NavItemPropsType) {\r\n  const text = name[0].toUpperCase() + name.slice(1)\r\n  return (\r\n    <div className={s.item}>\r\n      <NavLink to={`/${name}`} activeClassName={s.active}>\r\n        {text}\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import s from './Post.module.scss'\r\n\r\ntype PostType = {\r\n  message: string\r\n  likesCount: number\r\n}\r\n\r\nfunction Post(props: PostType) {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRDzaMc-3F_Ey437EAdp97a4dPrHCI9HI33nA&usqp=CAU\"\r\n        alt=\"avatar\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span>like </span>\r\n        <span>{props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import { ChangeEvent } from 'react'\r\nimport s from './MyPosts.module.scss'\r\nimport Post from './Post/Post'\r\nimport { ActionType, PostType, addPostAC, updateNewPostTextAC } from '../../../redux/state'\r\n\r\ntype PropsType = {\r\n  posts: Array<PostType>\r\n  newPostText: string\r\n  dispatch: (action: ActionType) => void\r\n}\r\n\r\nfunction MyPosts(props: PropsType) {\r\n  const postsElements = props.posts.map(p => (\r\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} />\r\n  ))\r\n  const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    const text = e.currentTarget.value\r\n    props.dispatch(updateNewPostTextAC(text))\r\n  }\r\n\r\n  const addPost = () => {\r\n    props.dispatch(addPostAC())\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <div>\r\n        <div>\r\n          <textarea value={props.newPostText} onChange={onPostChange} />\r\n        </div>\r\n        <div>\r\n          <button onClick={addPost}>Add Post</button>\r\n        </div>\r\n      </div>\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyPosts\r\n","import s from './ProfileInfo.module.scss'\r\n\r\nfunction ProfileInfo() {\r\n  return (\r\n    <>\r\n      <div className={s.backImage}>\r\n        <img\r\n          src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ-fff2lftqIE077pFAKU1Mhbcj8YFvBbMvpA&usqp=CAU\"\r\n          alt=\"background\"\r\n        />\r\n      </div>\r\n      <div className={s.descriptionBlock}>avatar + description</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo\r\n","import MyPosts from './MyPosts/MyPosts'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport { ActionType, ProfilePageType } from '../../redux/state'\r\n\r\ntype PropsType = {\r\n  profilePage: ProfilePageType\r\n  dispatch: (action: ActionType) => void\r\n}\r\n\r\nfunction Profile(props: PropsType) {\r\n  const { posts, newPostText } = props.profilePage\r\n  return (\r\n    <div>\r\n      <ProfileInfo />\r\n      <MyPosts posts={posts} newPostText={newPostText}\r\n               dispatch={props.dispatch} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import s from '../Dialogs.module.scss'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { DialogType } from '../../../redux/state'\r\n\r\nfunction DialogItem(props: DialogType) {\r\n  let path = `/dialogs/${props.id}`\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={path} activeClassName={s.active}>\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem\r\n","import s from '../Dialogs.module.scss'\r\n\r\ntype MessagePropsType = {\r\n  message: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n  return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message\r\n","import { ChangeEvent } from 'react'\r\nimport s from './Dialogs.module.scss'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { ActionType, DialogsPageType, sendMessageAC, updateNewMessageTextAC } from '../../redux/state'\r\n\r\n\r\ntype DialogsPropsType = {\r\n  state: DialogsPageType\r\n  dispatch: (action: ActionType) => void\r\n}\r\n\r\nfunction Dialogs(props: DialogsPropsType) {\r\n  const { dialogs, messages, newMessageText } = props.state\r\n  const dialogsElements = dialogs.map(d => (\r\n    <DialogItem key={d.id} name={d.name} id={d.id} />\r\n  ))\r\n  const messagesElements = messages.map(m => (\r\n    <Message key={m.id} message={m.message} />\r\n  ))\r\n  const sendMessage = () => {\r\n    props.dispatch(sendMessageAC())\r\n  }\r\n  const onMessageChange = (e: ChangeEvent<HTMLTextAreaElement>)=> {\r\n    const message = e.currentTarget.value\r\n    props.dispatch(updateNewMessageTextAC(message))\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>{messagesElements}\r\n        <div className={s.newMessage}>\r\n          <textarea value={newMessageText} onChange={onMessageChange}/>\r\n        </div>\r\n        <div>\r\n          <button onClick={sendMessage}>Send Message</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs\r\n","//import s from './News.module.scss';\r\n\r\nfunction News() {\r\n  return <div>News</div>\r\n}\r\n\r\nexport default News\r\n","//import s from './Music.module.scss';\r\n\r\nfunction Music() {\r\n  return <div>Music</div>\r\n}\r\n\r\nexport default Music\r\n","//import s from './Settings.module.scss';\r\n\r\nfunction Settings() {\r\n  return <div>Settings</div>\r\n}\r\n\r\nexport default Settings\r\n","import { Route } from 'react-router-dom'\r\nimport './App.scss'\r\nimport Header from './components/Header/Header'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport Profile from './components/Profile/Profile'\r\nimport Dialogs from './components/Dialogs/Dialogs'\r\nimport News from './components/News/News'\r\nimport Music from './components/Music/Music'\r\nimport Settings from './components/Settings/Settings'\r\nimport { StoreType } from './redux/state'\r\n\r\ntype AppPropsType = {\r\n  store: StoreType\r\n}\r\n\r\nfunction App({ store }: AppPropsType) {\r\n  const state = store.getState()\r\n  const dispatch = store.dispatch.bind(store)\r\n\r\n  return (\r\n    <div className='app-wrapper'>\r\n      <Header />\r\n      <Navbar />\r\n      <div className='app-wrapper-content'>\r\n        <Route\r\n          path='/dialogs'\r\n          render={() => <Dialogs state={state.dialogsPage} dispatch={dispatch} />}\r\n        />\r\n        <Route\r\n          path='/profile'\r\n          render={() => <Profile profilePage={state.profilePage} dispatch={dispatch} />}\r\n        />\r\n        <Route path='/news' render={News} />\r\n        <Route path='/music' render={Music} />\r\n        <Route path='/settings' render={Settings} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import store from './redux/state'\r\nimport './index.scss'\r\nimport ReactDOM from 'react-dom'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport App from './App'\r\n\r\nconst rerenderEntireTree = () => {\r\n  ReactDOM.render(\r\n    <HashRouter>\r\n      <App store={store} />\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n  )\r\n}\r\n\r\nrerenderEntireTree()\r\n\r\nstore.subscribe(rerenderEntireTree)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Amyw\",\"dialogsItems\":\"Dialogs_dialogsItems__flAbO\",\"dialog\":\"Dialogs_dialog__3UqrR\",\"active\":\"Dialogs_active__3t-ta\",\"messages\":\"Dialogs_messages__3vFfU\",\"message\":\"Dialogs_message__2rGeh\",\"newMessage\":\"Dialogs_newMessage__1cZti\"};"],"sourceRoot":""}